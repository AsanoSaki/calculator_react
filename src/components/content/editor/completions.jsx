// 自动补全配置文件

const COMPLETIONS = {
    "cpp": [
        {label: "include", type: "keyword"}, {label: "queue", type: "keyword"},
        {label: "iostream", type: "keyword"}, {label: "stack", type: "keyword"},
        {label: "algorithm", type: "keyword"}, {label: "deque", type: "keyword"},
        {label: "string", type: "keyword"}, {label: "map", type: "keyword"},
        {label: "vector", type: "keyword"}, {label: "set", type: "keyword"},
        {label: "unordered_set", type: "keyword"}, {label: "unordered_map", type: "keyword"},
        {label: "cstring", type: "keyword"}, {label: "cmath", type: "keyword"},
        {label: "numeric", type: "keyword"}, {label: "cstdio", type: "keyword"},
        {label: "cstdlib", type: "keyword"}, {label: "list", type: "keyword"},
        {label: "int", type: "keyword"}, {label: "auto", type: "keyword"},
        {label: "float", type: "keyword"}, {label: "double", type: "keyword"},
        {label: "bool", type: "keyword"}, {label: "char", type: "keyword"},
        {label: "long", type: "keyword"}, {label: "short", type: "keyword"},
        {label: "signed", type: "keyword"}, {label: "unsigned", type: "keyword"},
        {label: "true", type: "keyword"}, {label: "false", type: "keyword"},
        {label: "for", type: "keyword"}, {label: "while", type: "keyword"},
        {label: "if", type: "keyword"}, {label: "else", type: "keyword"},
        {label: "do", type: "keyword"}, {label: "return", type: "keyword"},
        {label: "try", type: "keyword"}, {label: "catch", type: "keyword"},
        {label: "break", type: "keyword"}, {label: "continue", type: "keyword"},
        {label: "typedef", type: "keyword"}, {label: "new", type: "keyword"},
        {label: "sizeof", type: "keyword"}, {label: "switch", type: "keyword"},
        {label: "class", type: "keyword"}, {label: "const", type: "keyword"},
        {label: "case", type: "keyword"}, {label: "struct", type: "keyword"},
        {label: "inline", type: "keyword"}, {label: "default", type: "keyword"},
        {label: "void", type: "keyword"}, {label: "operator", type: "keyword"},
        {label: "public", type: "keyword"}, {label: "private", type: "keyword"},
        {label: "protected", type: "keyword"}, {label: "static", type: "keyword"},
        {label: "using", type: "keyword"}, {label: "namespace", type: "keyword"},
        {label: "hello", type: "variable", info: "(World)"},
        {label: "magic", type: "text", apply: "⠁⭒*.✩.*⭒⠁", detail: "macro"}
    ],
    "java": [],
    "python": [
        {label: "True", type: "keyword"}, {label: "False", type: "keyword"},
        {label: "None", type: "keyword"}, {label: "and", type: "keyword"},
        {label: "or", type: "keyword"}, {label: "not", type: "keyword"},
        {label: "as", type: "keyword"}, {label: "assert", type: "keyword"},
        {label: "async", type: "keyword"}, {label: "await", type: "keyword"},
        {label: "break", type: "keyword"}, {label: "class", type: "keyword"},
        {label: "continue", type: "keyword"}, {label: "def", type: "keyword"},
        {label: "del", type: "keyword"}, {label: "if", type: "keyword"},
        {label: "elif", type: "keyword"}, {label: "else", type: "keyword"},
        {label: "try", type: "keyword"}, {label: "except", type: "keyword"},
        {label: "finally", type: "keyword"}, {label: "from", type: "keyword"},
        {label: "global", type: "keyword"}, {label: "import", type: "keyword"},
        {label: "if", type: "keyword"}, {label: "in", type: "keyword"},
        {label: "is", type: "keyword"}, {label: "lambda", type: "keyword"},
        {label: "nonlocal", type: "keyword"}, {label: "pass", type: "keyword"},
        {label: "raise", type: "keyword"}, {label: "return", type: "keyword"},
        {label: "while", type: "keyword"}, {label: "with", type: "keyword"},
        {label: "yield", type: "keyword"}, {label: "for", type: "keyword"},
        {label: "range", type: "keyword"}, {label: "print", type: "keyword"},
        {label: "hello", type: "variable", info: "(World)"},
        {label: "magic", type: "text", apply: "⠁⭒*.✩.*⭒⠁", detail: "macro"}
    ],
};

export default COMPLETIONS;